<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Bruce B Campbell]]></title>
  <link href="http://brucebcampbell.github.io/atom.xml" rel="self"/>
  <link href="http://brucebcampbell.github.io/"/>
  <updated>2015-05-30T16:01:57+00:00</updated>
  <id>http://brucebcampbell.github.io/</id>
  <author>
    <name><![CDATA[Bruce Campbell]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Testing MathJax]]></title>
    <link href="http://brucebcampbell.github.io/blog/2014/03/09/testing-mathjax/"/>
    <updated>2014-03-09T23:44:50+00:00</updated>
    <id>http://brucebcampbell.github.io/blog/2014/03/09/testing-mathjax</id>
    <content type="html"><![CDATA[<p>Spectral Geometry concerns itself with the relationships between a geometric structure and the spectra of a
differential operator, typically the Laplacian.   Inferring the geometry from the spectra is a type of inverse
problem since two non isometric manifolds may share the same spectra.  Going the other way, we encounter
isoperimetric inequalities and spectral gap theorems.  “Can One Hear the Shape of a Drum?” was the of an article
 by Mark Kac in the American Mathematical Monthly 1966.   The frequencies at which a drum vibrate depends on its shape.
 The elliptic PDE  <script type="math/tex"> \nabla^2 A + k A = 0</script> tells us the frequencies if we know the shape.
 These frequencies are the eigenvalues of the Laplacian in the region.
 Can the spectrum of the Laplacian  tell us the shape if we know the frequencies?  Hermann Weyl showed the eigenvalues
 of the Laplacian in the compact domain <script type="math/tex">\Omega</script> are distributed according to</p>

<script type="math/tex; mode=display"> N(\lambda) \sim (2 \pi)^{-d) \omega_d \lambda^{\frac{d}{2}} vol(\Omega}</script>

<p>The Laplace Beltrami operator is the generalization of
 <script type="math/tex">\nabla \circ \nabla = \Delta</script> to <script type="math/tex">\mathcal{M}</script></p>

<script type="math/tex; mode=display">\Delta f = tr(H(f))</script>

<p>In the exterior calculus we have <script type="math/tex"> \Delta f = d^*d \; f</script>.</p>

<p>The Laplacian of a Gaussian has well known applications in image processing.
Given <script type="math/tex">f(x,y)</script>, we get a scale space representation when we convolve by</p>

<script type="math/tex; mode=display">g(x,y,t) = \frac{e^{x^2+y^2}}{2 \pi t}</script>

<script type="math/tex; mode=display">L(x,y,t) =g(x,y,t) \ast f(x,y)</script>

<p>Applying <script type="math/tex">\Delta</script> to <script type="math/tex">L(x,y,t)</script> gives response to blobs of extent <script type="math/tex">\sqrt{t}</script></p>

<p>There is a well known connection between diffusion processes and Schrodinger operators;</p>

<script type="math/tex; mode=display"> H = \nabla^2 + V(x) \Phi \in L^2(R^n) </script>

<script type="math/tex; mode=display">H \Phi = E \Phi </script>

<script type="math/tex; mode=display">E = \sigma(H) </script>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Testing GistPlugin]]></title>
    <link href="http://brucebcampbell.github.io/blog/2014/03/09/testing-gistplugin/"/>
    <updated>2014-03-09T23:15:07+00:00</updated>
    <id>http://brucebcampbell.github.io/blog/2014/03/09/testing-gistplugin</id>
    <content type="html"><![CDATA[<p>This is a gist of instruction to host doxygen generated code documentation to githubs gh-pages web hosting. </p>
<div><script src="https://gist.github.com/d7a6791ac1933fbd7f1d.js"></script>
<noscript><pre><code>Example Doxygen Content http://wavescholar.github.io/klMatrixCore/ 

Create your project in GitHub. 
Go to the admin pages and enable gh-pages for your project. 
You will need the gh-pages branch created by GitHub, and whatever initialization it does.


# Make your gitHub project. mkdir project
cd project/
git init
echo &quot;# Project README file&quot; &gt; README.markdown
git add .
git commit -m &quot;Project README added&quot;
git remote add origin git@github.com:[user]/[repo].git
git push origin master # Make a new html directory, and tell git to ignore it. mkdir html
echo &quot;html/&quot; &gt; .gitignore
git add .
git commit -m &quot;.gitignore html/ folder (contains gh-pages branch)&quot;
git push origin master # Clone the whole project (master+gh-branch) into a new subdirectorycd html/
git clone git@github.com:[user]/[repo].git .
git checkout origin/gh-pages -b gh-pages
ls -la# Ignore the warning. Get rid of master, leaving gh-branches.
git branch -d master
 # You are now on the gh-pages branch.# You might have an index.html from GitHub, otherwise an empty directory. 

git branch echo &quot;h1. html README file&quot; &gt; README.textile
git add . git commit -m &quot;html README added&quot;

# Now push the gh-pages back to GitHub.git push origin gh-pages# Back to the top of your project. 

# Manually push master, run doxygen, and push gh-pages each time.
cd project
git push origin master
doxygen docs/Doxyfile
cd html
git push origin gh-pages</code></pre></noscript></div>

<p>An example of such hosting for klMatrix : http://wavescholar.github.com/klMatrixCore/</p>

]]></content>
  </entry>
  
</feed>
